Walt.txt

Branches:


When you clone the Remote Repository your Dev Environment automatically starts on the repositories main or master branch.

Most work-flows with git include making your changes on a branch, before you merge them back into master. 



Usually you'll be working on your own branch, until you're done and confident in your changes 
which can then be merged into the master.





Branches live in the Local and Remote Repository. 
When you create a new branch, the branches contents will be a copy 
of the currently committed state of whatever branch you are currently working on. 

To create a new branch called change_alice you can run git branch change_alice. 
This adds the new branch to the Local Repository. 

While your Working Directory and Staging Area don't really care about branches, 
you always commit to the branch you are currently on. 

You can think of branches in git as pointers, pointing to a series of commits. 
When you commit, you add to whatever you're currently pointing to. 

you will have to use git checkout change_alice. What this does is simply to move the HEAD to the branch you specify.

    As you'll usually want switch to a branch right after creating it, there is the convenient -b option 
    available for the checkout command, which allows you to just directly checkout a new branch, 
    so you don't have to create it beforehand.

    So to create and switch to our change_alice branch, we could also just have called git checkout -b change_alice.



